{"version":3,"file":"static/js/875.c2e6aa8b.chunk.js","mappings":"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","sources":["Component/DenseTable.tsx","Page/User.tsx"],"sourcesContent":["import Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useEffect, useState } from 'react';\n\ntype DenseTableProps = {\n  name: string;\n  headers: string[];\n  data: string[][];\n  focusIndex?: number;\n  rowOnClick?: (e?: React.MouseEvent<HTMLTableRowElement, MouseEvent>, index?: number, value?: any) => void;\n  onDelete?: (rowIndex: number, value: any) => void;\n}\n\nexport default function DenseTable(props: DenseTableProps) {\n  const [curRow, setCurRow] = useState(0);\n\n  useEffect(() => {\n    if (props.focusIndex) {\n      setCurRow(props.focusIndex);\n    }\n  }, [props.focusIndex]);\n\n  const renderCol = (colsVal: string[], rowIndex: number) => {\n    const cols = colsVal.map((col, colIndex) => (\n      <TableCell key={`${props.name}-table-col-${colIndex}`} component=\"th\" scope=\"row\" align={colIndex > 0 ? \"right\" : \"left\"}>\n        {col}\n      </TableCell>\n    ));\n    if (props.onDelete) {\n      cols.push(\n        <TableCell key={`${props.name}-table-col-delete`} component=\"th\" scope=\"row\" align={\"center\"} sx={{ verticalAlign: \"middle\" }}>\n          <DeleteIcon visibility={curRow === rowIndex ? \"inherit\" : \"hidden\"} onClick={() => { if (props.onDelete) props.onDelete(rowIndex, colsVal) }} sx={{ color: \"grey\"}} />\n        </TableCell>\n      )\n    }\n    return cols;\n  }\n  return (\n    <TableContainer component={Paper}>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            {\n              props.headers.map((header, index) => {\n                return (\n                  <TableCell key={`${props.name}-table-header-${index}`} align={index > 0 ? \"right\" : \"left\"}>{header}</TableCell>\n                )\n              })\n            }\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row, index) => {\n            return (\n              <TableRow\n                hover={index !== props.focusIndex}\n                key={`${props.name}-table-row-${index}`}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 }, background: props.focusIndex === index ? \"lightgreen\" : \"inherit\", cursor: \"pointer\" }}\n                onClick={(e: React.MouseEvent<HTMLTableRowElement, MouseEvent>) => { if (props.rowOnClick) props.rowOnClick(e, index, row) }}\n                onMouseEnter={() => { setCurRow(index) }}\n              >\n                {\n                  renderCol(row, index)\n                }\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import { useCallback, useState } from \"react\";\nimport { Form, useLoaderData } from \"react-router-dom\";\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from \"@mui/material/Divider\";\nimport TextField from \"@mui/material/TextField\";\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Container from \"@mui/material/Container\";\n\n\nimport DenseTable from \"../Component/DenseTable\";\nimport { IUserRes } from \"../type/IUserRes\";\n\n\nexport default function User() {\n  const [dialogText, setDialogText] = useState(\"\");\n  const [deleteId, setDeleteId] = useState(\"\");\n\n  const { users } = useLoaderData() as { users: IUserRes[] };\n  const headers = [\"id\", \"Name\", \"Username\", \"Role Id\", \"\"];\n  const data = users.map((user) => {\n    return [user.id, user.name, user.username, user.roleId];\n  });\n\n  const deleteUser = useCallback((index: number, user: string[]) => {\n    setDeleteId(user[0]);\n    setDialogText(`You are about to delete user ${user[0]}`)\n  }, []);\n\n  const closeDialog = useCallback(() => {\n    setDialogText(\"\");\n  }, []);\n\n  return (\n    <Box sx={{ bgcolor: 'background.default' }}>\n      <Container id=\"features\" sx={{ py: { xs: 8, sm: 16 } }}>\n        <Grid container>\n          <Grid item xs={12}>\n            <DenseTable \n              name=\"User Admin Table\" \n              data={data} \n              headers={headers} \n              onDelete={deleteUser}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n      <Divider />\n      <Dialog\n        open={!!dialogText}\n        onClose={closeDialog}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Are you sure?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {dialogText}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>Cancel</Button>\n          <Form method=\"DELETE\">\n            <TextField\n              id=\"dialog-input-delete-user\"\n              name=\"dialog-input-delete-user\"\n              sx={{ display: \"none\" }}\n              value={deleteId}\n            />\n            <Button type=\"submit\" name=\"intent\" value=\"delete\" autoFocus onClick={closeDialog}>\n              Confirm\n            </Button>\n          </Form>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}"],"names":["DenseTable","props","curRow","setCurRow","useState","useEffect","focusIndex","renderCol","colsVal","rowIndex","cols","map","col","colIndex","_jsx","TableCell","component","scope","align","children","concat","name","onDelete","push","sx","verticalAlign","DeleteIcon","visibility","onClick","color","TableContainer","Paper","_jsxs","Table","size","TableHead","TableRow","headers","header","index","TableBody","data","row","hover","border","background","cursor","e","rowOnClick","onMouseEnter","User","dialogText","setDialogText","deleteId","setDeleteId","users","useLoaderData","user","id","username","roleId","deleteUser","useCallback","closeDialog","Box","bgcolor","Container","py","xs","sm","Grid","container","item","Divider","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Form","method","TextField","display","value","type","autoFocus"],"sourceRoot":""}